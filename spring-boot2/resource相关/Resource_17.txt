Resource

注释

    从一个真实类型的资源抽象出的资源描述符
    具体行为不同实现不同

接口定义
    
    public interface Resource extends InputStreamSource {

        boolean exists();

        default boolean isReadable() {
            return true;
        }

        default boolean isOpen() {
            return false;
        }

        default boolean isFile() {
            return false;
        }

        URL getURL() throws IOException;

        URI getURI() throws IOException;

        File getFile() throws IOException;

        default ReadableByteChannel readableChannel() throws IOException {
            return Channels.newChannel(getInputStream());
        }

        long contentLength() throws IOException;

        long lastModified() throws IOException;

        Resource createRelative(String relativePath) throws IOException;

        @Nullable
        String getFilename();

        String getDescription();

    }

子接口
    
    WritableResource:支持写入的Resource
    ContextResource:从context载入的resource
    HttpResource:可以被写入HTTP response的Resource

子类(13)

    AbstractResource:
        各个实现的基类
    AbstractFileResolvingResource:
        解决URL -> File引用的抽象基类,比如UrlResource,ClassPathResource

    BeanDefinitionResource:
        对BeanDefinition的描述性Resource包装类
    ByteArrayResource:
        给定字节数组的对应Resource实现
    ClassPathResource:
        对于classpath下资源文件的Resource实现
    DescriptiveResource:
        持有一个resource描述符但是并没有指向真实的resource.用做占位符,如果API需要Resource参数但又不会真的读它的时候
    FileSystemResource:
        java.io.File的对应Resource实现
    InputStreamResource:
        给定InputStream的Resource实现
    PathResource:
        java.nio.file.Path的对应Resource实现
    ServletContextResource:
        ServletContext相关的实现,以当前的web应用的根目录来解释相对路径
    TransformedResource:
        ByteArrayResource的扩展
    UrlResource:
        java.net.URL定位符的对应Resource实现
    VfsResource:
        JBoss VFS 对应的Resource实现