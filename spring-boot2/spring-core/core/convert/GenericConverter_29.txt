GenericConverter

注释

	更一般的converter接口,用于在两种或多种类型间转换

接口定义

	public interface GenericConverter {

		Set<ConvertiblePair> getConvertibleTypes();

		Object convert(@Nullable Object source, TypeDescriptor sourceType, TypeDescriptor targetType);


		final class ConvertiblePair {

			private final Class<?> sourceType;

			private final Class<?> targetType;

			public ConvertiblePair(Class<?> sourceType, Class<?> targetType) {
				Assert.notNull(sourceType, "Source type must not be null");
				Assert.notNull(targetType, "Target type must not be null");
				this.sourceType = sourceType;
				this.targetType = targetType;
			}

			public Class<?> getSourceType() {
				return this.sourceType;
			}

			public Class<?> getTargetType() {
				return this.targetType;
			}

			@Override
			public boolean equals(@Nullable Object other) {
				if (this == other) {
					return true;
				}
				if (other == null || other.getClass() != ConvertiblePair.class) {
					return false;
				}
				ConvertiblePair otherPair = (ConvertiblePair) other;
				return (this.sourceType == otherPair.sourceType && this.targetType == otherPair.targetType);
			}

			@Override
			public int hashCode() {
				return (this.sourceType.hashCode() * 31 + this.targetType.hashCode());
			}

			@Override
			public String toString() {
				return (this.sourceType.getName() + " -> " + this.targetType.getName());
			}
		}

	}

子类(28)